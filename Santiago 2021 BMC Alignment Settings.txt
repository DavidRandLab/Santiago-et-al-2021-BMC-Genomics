
#Example settings used for a read library file named OO1.fastq.gz

#load programs
#module load fastqc/0.10.1
module load samtools/1.3.1
module load tophat/2.1.1
module load bowtie2/2.2.9
module load R/3.3.1 
module load cufflinks/2.2.1

#fastqc
fastqc OO1.fastq.gz -o "FastQC/" -t 16

#tophat
tophat -p 8 -i 30 -I 20000 --segment-length 25 -G "dm3ensembl.gtf" -o "OO1tophatv2.out" dm3 "001.fastq"

#samtools
samtools index -b "OO1_accepted_hitsv2.bam"



#Running HTSeq in python

import HTSeq
import itertools
import numpy

gtf_file=HTSeq.GFF_Reader("/users/jwood/shared/dm3ensembl.gtf")

exons=HTSeq.GenomicArrayOfSets("auto",stranded=False)

for feature in gtf_file:
	if feature.type=="exon":
		exons[feature.iv]+= feature.name

counts={}
for feature in gtf_file:
	if feature.type=="exon":
		counts[feature.name]=0

bam_file=HTSeq.BAM_Reader("\OO1_accepted_hitsv2.bam")
for alnmt in bam_file:
	if alnmt.aligned:
		iset=None
		for iv2, step_set in exons[alnmt.iv].steps():
			if iset is None:
				iset=step_set.copy()
			else:
				iset.intersection_update(step_set)
		if len(iset)==1:
			counts[list(iset)[0]] +=1

file=open("\OO1_Count_Table.txt",'w')
for name in sorted(counts.keys()):
	print>>file, name, counts[name]

file.close()